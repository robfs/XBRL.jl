var documenterSearchIndex = {"docs":
[{"location":"instance/#Instance","page":"Instance","title":"Instance","text":"","category":"section"},{"location":"instance/","page":"Instance","title":"Instance","text":"Modules = [XbrlXML.Instance]\nOrder   = [:type, :function]\nPages   = [\"Instance.jl\"]","category":"page"},{"location":"taxonomy/#Taxonomy","page":"Taxonomy","title":"Taxonomy","text":"","category":"section"},{"location":"taxonomy/","page":"Taxonomy","title":"Taxonomy","text":"Modules = [XbrlXML.Taxonomy]\nOrder   = [:type, :function]\nPages   = [\"Taxonomy.jl\"]","category":"page"},{"location":"taxonomy/#XbrlXML.Taxonomy.parsetaxonomy","page":"Taxonomy","title":"XbrlXML.Taxonomy.parsetaxonomy","text":"parsetaxonomy(schema_path, cache::HttpCache, schema_url=nothing)::TaxonomySchema\n\nParse a given taxonomy\n\n\n\n\n\n","category":"function"},{"location":"#XbrlXML.jl","page":"Home","title":"XbrlXML.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"cache/#Cache","page":"Cache","title":"Cache","text":"","category":"section"},{"location":"cache/","page":"Cache","title":"Cache","text":"Modules = [XbrlXML.Cache]\nOrder   = [:module, :type, :function]\nPages   = [\"Cache.jl\"]","category":"page"},{"location":"cache/#XbrlXML.Cache","page":"Cache","title":"XbrlXML.Cache","text":"Provides interface to local store of files used for parsing XBRL.\n\n\n\n\n\n","category":"module"},{"location":"cache/#XbrlXML.Cache.HttpCache","page":"Cache","title":"XbrlXML.Cache.HttpCache","text":"HttpCache(cache_dir=\"./cache/\", headers=Dict())\n\nCreate a cache to store files locally for reuse.\n\nheaders are passed to http Downloads.download. Services such as SEC require you to disclose information about your application.\n\nExample\n\njulia> cache = HttpCache(\"/Users/user/cache/\")\n/Users/user/cache/\n\njulia> cacheheader!(cache, \"User-Agent\" => \"You youremail@domain.com\")\nDict{AbstractString, AbstractString} with 1 entry:\n  \"User-Agent\" => \"You youremail@domain.com\"\n\n\n\n\n\n","category":"type"},{"location":"cache/#XbrlXML.Cache.cache_edgar_enclosure-Tuple{HttpCache, String}","page":"Cache","title":"XbrlXML.Cache.cache_edgar_enclosure","text":"cache_edgar_enclosure(cache::HttpCache, enclosure_url)\n\n\n\n\n\n","category":"method"},{"location":"cache/#XbrlXML.Cache.cachedir-Tuple{HttpCache}","page":"Cache","title":"XbrlXML.Cache.cachedir","text":"cachedir(cache::HttpCache)::String\n\nReturn the local directory of a cache.\n\n\n\n\n\n","category":"method"},{"location":"cache/#XbrlXML.Cache.cachefile-Tuple{HttpCache, String}","page":"Cache","title":"XbrlXML.Cache.cachefile","text":"cachefile(cache::HttpCache, file_url)::String\n\nSave a file located at file_url to a local cache.\n\n\n\n\n\n","category":"method"},{"location":"cache/#XbrlXML.Cache.cacheheader!-Tuple{HttpCache, Pair{String, String}}","page":"Cache","title":"XbrlXML.Cache.cacheheader!","text":"cacheheader!(cache::HttpCache, header::Pair)::Dict\n\nAdd a header pair to a cache and return the headers.\n\n\n\n\n\n","category":"method"},{"location":"cache/#XbrlXML.Cache.cacheheaders!-Tuple{HttpCache, Vector{Pair{String, String}}}","page":"Cache","title":"XbrlXML.Cache.cacheheaders!","text":"cacheheaders!(cache::HttpCache, header::Vector{Pair})::Dict\n\nAdd multiple header pairs to a cache and return the headers.\n\n\n\n\n\n","category":"method"},{"location":"cache/#XbrlXML.Cache.cacheheaders-Tuple{HttpCache}","page":"Cache","title":"XbrlXML.Cache.cacheheaders","text":"cacheheaders(cache::HttpCache)::Dict\n\nReturn the headers of a cache.\n\n\n\n\n\n","category":"method"},{"location":"cache/#XbrlXML.Cache.purgefile-Tuple{HttpCache, String}","page":"Cache","title":"XbrlXML.Cache.purgefile","text":"purgefile(cache::HttpCache, file_url)::Bool\n\nRemove a file, based on its URL, from a local cache.\n\n\n\n\n\n","category":"method"},{"location":"cache/#XbrlXML.Cache.urltopath-Tuple{HttpCache, String}","page":"Cache","title":"XbrlXML.Cache.urltopath","text":"urltopath(cache::HttpCache, url)::String\n\nConvert a file's url to a local cache file.\n\n\n\n\n\n","category":"method"},{"location":"linkbases/#Linkbases","page":"Linkbases","title":"Linkbases","text":"","category":"section"},{"location":"linkbases/","page":"Linkbases","title":"Linkbases","text":"Modules = [XbrlXML.Linkbases]\nOrder   = [:type, :function]\nPages   = [\"Linkbases.jl\"]","category":"page"}]
}
